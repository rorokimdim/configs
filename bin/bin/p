#!/usr/bin/env python

import os
import pathlib
import subprocess
import sys


def read_cmds(path, cmds=None):
    cmds = cmds or {}
    with open(path) as ifile:
        for line in ifile:
            line = line.strip()
            if not line:
                continue
            if line.startswith('#'):
                continue
            if line.startswith(':'):
                splits = line.split(maxsplit=1)
                cmds[splits[0][1:]] = splits[1]
            else:
                cmds[line] = line
    return cmds


# Read .cmds from home directory
cmds = {}

try:
    cmds = read_cmds(os.path.join(pathlib.Path.home(), '.cmds'), cmds=cmds)
except FileNotFoundError:
    # ignore. Not required to have a .cmds in home directory
    pass

try:
    cmds = read_cmds('.cmds', cmds=cmds)
except FileNotFoundError:
    # ignore
    pass

if not cmds:
    print('No commands found in .cmds file.')
    sys.exit(0)


if len(sys.argv) > 1:
    key = sys.argv[1]
    if key.startswith(':'):
        key = key[1:]
    cmd = cmds.get(key)
    if cmd is None:
        print(f'Invalid key {key}')
else:
    fzf = subprocess.run(
        ['fzf'],
        stdout=subprocess.PIPE,
        input='\n'.join(cmds.keys()),
        encoding='utf-8')

    selected = fzf.stdout.strip()
    cmd = cmds.get(selected)

if cmd:
    print(cmd, file=sys.stderr)
    os.system(cmd)
