let mapleader = ","
colorscheme delek

filetype off

set tabstop=4
set expandtab
set shiftwidth=4
set tw=90
set mouse=a
set ic
set incsearch
set ruler
set nofoldenable
filetype indent on

filetype plugin indent on
syntax on
filetype plugin on

"""Start of Vundle stuff
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-fugitive'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'vim-syntastic/syntastic'
Plugin 'easymotion/vim-easymotion'
Plugin 'haya14busa/incsearch.vim'
Plugin 'haya14busa/incsearch-easymotion.vim'
Plugin 'scrooloose/nerdtree'
call vundle#end()
"""End of Vundle stuff

filetype plugin indent on

match ErrorMsg '\%>100v.\+'
match ErrorMsg '\s\+\%#\@<!$'
autocmd InsertLeave * redraw!

"""Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
highlight SyntasticError guibg=#2f0000
highlight SyntasticErrorSign guifg=white guibg=red
highlight SyntasticErrorLine guifg=white guibg=red
highlight SyntasticWarningLine guifg=white guibg=red
let g:syntastic_enable_signs = 1
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_python_flake8_args = "--max-line-length=100"
let g:syntastic_cpp_compiler = 'clang++'
let g:syntastic_cpp_compiler_options = ' -std=c++11 -stdlib=libc++'
nnoremap <leader>en :silent! lnext<CR>
nnoremap <leader>ep :silent! lprev<CR>

""Easymotion
map <Leader> <Plug>(easymotion-prefix)
nmap <Leader>, <Plug>(easymotion-overwin-f)
map  <Leader>f <Plug>(easymotion-bd-f)
nmap <Leader>f <Plug>(easymotion-overwin-f)
map <Leader>/ <Plug>(incsearch-easymotion-/)
map <Leader>? <Plug>(incsearch-easymotion-?)
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)
let g:EasyMotion_startofline = 0 " keep cursor column when JK motion

"""NERDTree
nnoremap <leader>nt :NERDTreeToggle<CR>

"""Tabs
nnoremap <leader>tn :silent! tabn<CR>
nnoremap <leader>tp :silent! tabp<CR>

"""Custom functions
autocmd BufWrite * :call DeleteTrailingWS()
func! DeleteTrailingWS()
    exe "normal mz"
    %s/\s\+$//ge
    exe "normal 'z"
endfunc

"With cursor on line call :Underline
function! s:Underline(chars)
    let chars = empty(a:chars) ? '-' : a:chars
    let nr_columns = virtcol('$') - 1
    let uline = repeat(chars, (nr_columns / len(chars)) + 1)
    put =strpart(uline, 0, nr_columns)
endfunction
command! -nargs=? Underline call s:Underline(<q-args>)

function s:MkNonExDir(file, buf)
    if empty(getbufvar(a:buf, '&buftype')) && a:file!~#'\v^\w+\:\/'
        let dir=fnamemodify(a:file, ':h')
        if !isdirectory(dir)
            call mkdir(dir, 'p')
        endif
    endif
endfunction

augroup BWCCreateDir
    autocmd!
    autocmd BufWritePre * :call s:MkNonExDir(expand('<afile>'), +expand('<abuf>'))
augroup END
