(require '[cemerick.pomegranate])

(cemerick.pomegranate/add-dependencies
 :coordinates '[[org.clojure/math.combinatorics "0.1.6"]
                [cheshire "5.9.0"]
                [table "0.5.0"]
                [clj-http "3.10.0"]
                [clj-time "0.14.0"]
                [com.rpl/specter "1.1.2"]]
 :repositories (merge cemerick.pomegranate.aether/maven-central
                      {"clojars" "https://clojars.org/repo"}))

(require '[clojure.math.combinatorics :as c]
         '[cheshire.core :as j]
         '[table.core :refer [table table-str]]
         '[clj-http.client :as http]
         '[clj-time.core :as t]
         '[com.rpl.specter :as s])

(defn start-nrepl
  ([] (start-nrepl 7888))
  ([port]
   (eval
    `(do
       (require '[cemerick.pomegranate])
       (cemerick.pomegranate/add-dependencies
        :coordinates '[[org.clojure/tools.nrepl "0.2.13"]]
        :repositories (merge cemerick.pomegranate.aether/maven-central
                             {"clojars" "https://clojars.org/repo"}))
       (require '[clojure.tools.nrepl.server])
       (println "Starting nrepl at" ~port)
       (defonce server (clojure.tools.nrepl.server/start-server :port ~port))))))

(defn closh-prompt []
  (source-shell "bash" "eval \"$(direnv export bash)\"")
  (str (str/replace-first (sh-str pwd) (getenv "HOME") "~") " ($) "))

(defcmd closh [path]
  (load-string (slurp path)))

(defcmd cdw []
  (cd (str (System/getenv "HOME") "/" "workspace")))

(defcmd ls [& args]
  (eval (macroexpand `(sh "ls" "-GFH" ~@args))))

(defcmd e [& args]
  (eval
   (macroexpand
    `(sh "/Applications/Emacs.app/Contents/MacOS/bin/emacsclient"
         "-n"
         "--alternate-editor"
         "vim"
         ~@args))))
